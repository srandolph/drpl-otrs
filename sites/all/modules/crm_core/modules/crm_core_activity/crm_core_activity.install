<?php

/**
 * @file
 * Install, update, and uninstall functions for the CRM Core Activity module.
 */

/**
 * Implements hook_install().
 */
function crm_core_activity_install() {
  $t = get_t();

  // Create a default meeting activity type.
  $meeting = entity_create('crm_core_activity_type', array(
    'type' => 'meeting',
    'label' => $t('Meeting'),
    'description' => $t('A meeting between 2 or more contacts'),
  ));
  crm_core_activity_type_save($meeting);

  // Create a phone call activity type.
  $phone_call = entity_create('crm_core_activity_type', array(
    'type' => 'phone_call',
    'label' => $t('Phone call'),
    'description' => $t('A phone call between 2 or more contacts'),
  ));
  crm_core_activity_type_save($phone_call);
}

/**
 * Implements hook_enable().
 */
function crm_core_activity_enable() {
  // Clear the cache to display in Feeds as available plugin.
  cache_clear_all('plugins:feeds:plugins', 'cache');
}

/**
 * Implements hook_uninstall().
 */
function crm_core_activity_uninstall() {
  // @todo These are the default fields only. What if there are more?
  module_load_include('inc', 'crm_core_activity', 'crm_core_activity.fields');
  foreach (_crm_core_activity_type_default_fields() as $field) {
    field_delete_field($field['field_name']);
  }
}

/**
 * Implements hook_schema().
 */
function crm_core_activity_schema() {
  $schema = array();

  $schema['crm_core_activity'] = array(
    'description' => 'The base table for activities.',
    'fields' => array(
      'activity_id' => array(
        'description' => 'The primary identifier for an activity.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type (bundle) of this activity.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'title' => array(
        'description' => 'The title of the activity.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'ID of Drupal user creator.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the activity was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the activity was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'activity_type_id' => array(
        'description' => 'The current {crm_core_activity_type}.id of this activity.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'foreign keys' => array(
      'activity_type' => array(
        'table' => 'crm_core_activity_type',
        'columns' => array('activity_type_id' => 'id'),
      ),
    ),
    'primary key' => array('activity_id'),
  );

  $schema['crm_core_activity_type'] = array(
    'description' => 'Stores information about all defined activity types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique activity type ID.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'A brief description of this type.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'medium',
        'translatable' => TRUE,
      ),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );

  return $schema;
}


/**
 * Update crm_core_activity schema.
 */
function crm_core_activity_update_7001(&$sandbox) {
  if (!db_field_exists('crm_core_activity', 'activity_type_id')) {
    $spec = array(
      'description' => 'The current {crm_core_activity_type}.id of this activity.',
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0,
    );

    db_add_field('crm_core_activity', 'activity_type_id', $spec);
  }
}

/**
 * Populate crm_core_activity.activity_type_id.
 */
function crm_core_activity_update_7002(&$sandbox) {
  // Update 10 activities at a time to change {crm_core_activity}.type to
  // int value of {crm_core_activity_type}.id
  if (!isset($sandbox['progress'])) {
    $sandbox['progress'] = 0;
    $sandbox['current_activity_id'] = 0;
    $sandbox['max'] = db_query('SELECT COUNT(DISTINCT activity_id) FROM {crm_core_activity}')->fetchField();
  }

  $activities = db_select('crm_core_activity', 'a')
    ->fields('a')
    ->condition('activity_id', $sandbox['current_activity_id'], '>')
    ->range(0, 10)
    ->orderBy('activity_id', 'ASC')
    ->execute();

  foreach ($activities as $activity) {
    // Get the matching id from {crm_core_activity_type}.
    $id = db_select('crm_core_activity_type', 'at')
      ->fields('at', array('id'))
      ->condition('type', $activity->type, '=')
      ->execute()
      ->fetchField();
    if (is_numeric($id)) {
      db_update('crm_core_activity')
        ->fields(array('activity_type_id' => $id))
        ->condition('activity_id', $activity->activity_id)
        ->execute();
    }
    $sandbox['progress']++;
    $sandbox['current_activity_id'] = $activity->activity_id;
  }

  $sandbox['#finished'] = empty($sandbox['max']) ? 1 : ($sandbox['progress'] / $sandbox['max']);

  if ($sandbox['#finished']) {
    drupal_flush_all_caches();
    return t('Added and populated field values for new {crm_core_activity}.activity_type_id field');
  }
}
